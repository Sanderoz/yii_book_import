version: '3.2'

services:

  nginx:
    image: nginx:1.25.2
    restart: always
    container_name: nginx
    ports:
      - 8080:80
      - 8081:81
      - 443:443
    volumes:
      - ./settings/nginx/default.conf:/etc/nginx/nginx.conf
      - ./app:/var/www/html
    depends_on:
      - php
      - api

  php:
    build:
      context: .
      dockerfile: settings/dockerfiles/php.Dockerfile
    container_name: php
    restart: always
    env_file:
      - ./.env
      - ./app/.env
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mysql-master

  api:
    build:
      context: .
      dockerfile: settings/dockerfiles/api.Dockerfile
    container_name: api
    restart: always
    env_file:
      - ./.env
      - ./app/.env
    volumes:
      - ./app:/var/www/html
    depends_on:
      - php
      - mysql-master

  cli:
    build:
      context: .
      dockerfile: settings/dockerfiles/cli.Dockerfile
#    command: sh -c "php yii queue/listen"
    container_name: cli
    restart: always
    env_file:
      - ./.env
      - ./app/.env
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mysql-master
      - rabbitmq
      - php

  mysql-master:
    image: mysql:8.0
    container_name: ${MYSQL_MASTER_HOST}
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./settings/mysql/init-master.sql:/docker-entrypoint-initdb.d/init-master.sql
      - ./settings/mysql/master.cnf:/etc/mysql/conf.d/master.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_MASTER_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_MASTER_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_MASTER_DATABASE}
      MYSQL_USER: ${MYSQL_MASTER_USER}
      MYSQL_MASTER_PORT: ${MYSQL_MASTER_PORT}

  mysql-slave:
    image: mysql:8.0
    container_name: ${MYSQL_SLAVE_HOST}
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_SLAVE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_SLAVE_DATABASE}
      MYSQL_USER: ${MYSQL_SLAVE_USER}
      MYSQL_PASSWORD: ${MYSQL_SLAVE_PASSWORD}
    depends_on:
      - mysql-master
    volumes:
      - ./settings/mysql/init-slave.sql:/docker-entrypoint-initdb.d/init-slave.sql
      - ./settings/mysql/slave.cnf:/etc/mysql/conf.d/slave.cnf

  rabbitmq:
    image: rabbitmq:3.9.29-management
    container_name: ${RABBITMQ_HOST}
    hostname: ${RABBITMQ_HOST}
    restart: always
    volumes:
      - ./rabbitmq/state:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit ${RABBITMQ_MEMORY_LIMIT}
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:7.2.3
    container_name: ${REDIS_HOST}
    ports:
      - 6379:6379

volumes:
  master_data:
  slave_data: